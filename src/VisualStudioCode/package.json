{
  "name": "codetalk",
  "displayName": "Code Talk",
  "version": "0.4.0",
  "description": "Code Talk",
  "publisher": "codetalk",
  "preview": false,
  "license": "SEE LICENSE IN LICENSE.txt",
  "aiKey": "AIF-675C71A1-C423-45BD-BBCC-C8795842D12B",
  "icon": "images/CodeTalk.png",
  "galleryBanner": {
    "color": "#2F2F2F",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/CodeTalk.git"
  },
  "bugs": {
    "url": "https://github.com/microsoft/CodeTalk/issues"
  },
  "homepage": "https://github.com/microsoft/CodeTalk/blob/master/README.md",
  "engines": {
    "vscode": "^1.49.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Accessibility"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension",
  "scripts": {
    "compile": "webpack --mode=development",
    "package": "vsce package",
    "install-extension": "yarn compile && yarn package && code --install-extension codetalk-0.3.0.vsix --force"
  },
  "devDependencies": {
    "@types/copy-webpack-plugin": "^8.0.0",
    "@types/node": "^14.14.16",
    "@types/sound-play": "^1.1.0",
    "@types/tmp": "0.0.28",
    "@types/underscore": "1.8.3",
    "@types/vscode": "^1.49.0",
    "copy-webpack-plugin": "^9.0.0",
    "sound-play": "^1.1.0",
    "ts-loader": "^9.2.3",
    "tslint": "^5.16.0",
    "tslint-microsoft-contrib": "^5.2.0",
    "typescript": "^3.5.3",
    "underscore": "^1.8.3",
    "vsce": "^1.92.0",
    "webpack": "^5.38.1",
    "webpack-cli": "^4.7.2"
  },
  "dependencies": {
  },
  "contributes": {
    "commands": [
      {
        "command": "codeTalk.navigateBack",
        "title": "Go Back",
        "category": "Code Talk",
        "enablement": "focusedView == codeTalkFunctionList || focusedView == codeTalkCurrentContext || focusedView == codeTalkTalkpointList || focusedView == workbench.panel.markers.view || focusedView == outline"
      },
      {
        "command": "codeTalk.showSummary",
        "title": "Show Code Summary",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.showErrors",
        "title": "Show Errors",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.showFunctions",
        "title": "Show Functions",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.showContext",
        "title": "Show Context",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.moveToParent",
        "title": "Move to Parent",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.addTalkpoint",
        "title": "Add Talkpoint",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.showAllTalkpoints",
        "title": "Show All Talkpoints",
        "category": "Code Talk"
      },
      {
        "command": "codeTalk.removeAllTalkpoints",
        "title": "Remove All Talkpoints",
        "category": "Code Talk"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codeTalk",
          "title": "Code Talk",
          "icon": "./images/CodeTalkActionBar.svg"
        }
      ]
    },
    "views": {
      "codeTalk": [
        {
          "id": "codeTalkFunctionList",
          "name": "Function List"
        },
        {
          "id": "codeTalkCurrentContext",
          "name": "Current Context"
        },
        {
          "id": "codeTalkTalkpointList",
          "name": "Talkpoint List"
        }
      ]
    },
    "keybindings": [
      {
        "command": "codeTalk.navigateBack",
        "key": "escape",
        "when": "focusedView == codeTalkFunctionList || focusedView == codeTalkCurrentContext || focusedView == codeTalkTalkpointList || focusedView == workbench.panel.markers.view || focusedView == outline"
      },
      {
        "command": "codeTalk.showSummary",
        "key": "ctrl+1 ctrl+m",
        "mac": "cmd+1 cmd+m",
        "when": "editorTextFocus"
      },
      {
        "command": "codeTalk.showFunctions",
        "key": "ctrl+1 ctrl+f",
        "mac": "cmd+1 cmd+f",
        "when": "editorTextFocus"
      },
      {
        "command": "codeTalk.showContext",
        "key": "ctrl+1 ctrl+g",
        "mac": "cmd+1 cmd+g",
        "when": "editorTextFocus"
      },
      {
        "command": "codeTalk.moveToParent",
        "key": "ctrl+1 ctrl+j",
        "mac": "cmd+1 cmd+j",
        "when": "editorTextFocus"
      },
      {
        "command": "codeTalk.showErrors",
        "key": "ctrl+1 ctrl+e",
        "mac": "cmd+1 cmd+e"
      },
      {
        "command": "codeTalk.addTalkpoint",
        "key": "ctrl+1 ctrl+b",
        "mac": "cmd+1 cmd+b",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "command": "codeTalk.showAllTalkpoints",
        "key": "ctrl+1 ctrl+t",
        "mac": "cmd+1 cmd+t"
      },
      {
        "command": "codeTalk.removeAllTalkpoints",
        "key": "ctrl+1 ctrl+d",
        "mac": "cmd+1 cmd+d"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Code Talk",
      "properties": {
        "codeTalk.errors.enableErrorDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable a sound when an error in the active file is detected."
        },
        "codeTalk.errors.errorDetectionInterval": {
          "type": "number",
          "default": 2000,
          "description": "Interval of time in milliseconds before checking for errors in the file."
        },
        "codeTalk.errors.customErrorSound": {
          "type": "string",
          "default": null,
          "description": "Play a custom sound from this file when an error in the active file is detected."
        },
        "codeTalk.talkpoints.customBreakpointSound": {
          "type": "string",
          "default": null,
          "description": "Play a custom sound from this file when a Tonal Talkpoint in the active file is hit."
        },
        "codeTalk.logDebugInfo": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logs",
          "scope": "window"
        }
      }
    }
  }
}
